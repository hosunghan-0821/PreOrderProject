buildscript {
	dependencies {
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
	}
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.6.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.preorder'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

repositories {
	mavenCentral()
}

dependencies {


	//Spring Basic
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.7'


	//Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	//QueryDSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"


	//MapStruct
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'


	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//postgresql
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.23'
	runtimeOnly 'org.postgresql:postgresql'


	//excel reader poi
	implementation group: 'org.apache.poi', name: 'poi', version: '4.1.2'
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'

	//Discord Bot
	implementation 'net.dv8tion:JDA:5.0.0-beta.5'

}

jar {
	enabled = false
}




configurations {
	compileOnly{
		extendsFrom annotationProcessor
	}
}

apply plugin: "com.ewerk.gradle.plugins.querydsl"

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

tasks.named('test') {
	useJUnitPlatform()
}

